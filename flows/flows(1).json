[
    {
        "id": "73dda681e85c7906",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4ad01a0a588f33e0",
        "type": "mqtt in",
        "z": "73dda681e85c7906",
        "name": "Button home",
        "topic": "/screen_home",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0e02d218069e8635",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "debb683603ad81f1"
            ]
        ]
    },
    {
        "id": "d529752a528acf94",
        "type": "mqtt in",
        "z": "73dda681e85c7906",
        "name": "Button top",
        "topic": "/screen_top",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0e02d218069e8635",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 160,
        "wires": [
            [
                "659c3ae8c0be73a5"
            ]
        ]
    },
    {
        "id": "55355dd3a8747d61",
        "type": "mqtt out",
        "z": "73dda681e85c7906",
        "name": "Screen display",
        "topic": "/screen_display",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0e02d218069e8635",
        "x": 1160,
        "y": 160,
        "wires": []
    },
    {
        "id": "082de7d65c7b6971",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "If button home -> print temperature and window in m5",
        "info": "",
        "x": 1100,
        "y": 220,
        "wires": []
    },
    {
        "id": "debb683603ad81f1",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "Drop if released",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "released",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 80,
        "wires": [
            [
                "ecab07921cfbcc95",
                "d090aac2f5e0b58a",
                "86d01e224773c8bb",
                "98d908f046467008"
            ]
        ]
    },
    {
        "id": "ecab07921cfbcc95",
        "type": "template",
        "z": "73dda681e85c7906",
        "name": "Clearing display",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "&&clear",
        "output": "str",
        "x": 840,
        "y": 160,
        "wires": [
            [
                "55355dd3a8747d61"
            ]
        ]
    },
    {
        "id": "659c3ae8c0be73a5",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "Drop if released",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "released",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "ecab07921cfbcc95"
            ]
        ]
    },
    {
        "id": "814bd75a3781b50c",
        "type": "function",
        "z": "73dda681e85c7906",
        "name": "function 2",
        "func": "\nconst temperature = msg.payload[0]._value;\n\nmsg.payload = `\n Temperature : ${temperature} C\n\n\n Humidity : ${temperature*2} %\n`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 20,
        "wires": [
            [
                "55355dd3a8747d61"
            ]
        ]
    },
    {
        "id": "716bf9cfda617f2d",
        "type": "mqtt in",
        "z": "73dda681e85c7906",
        "name": "",
        "topic": "rfid_sensor/reader/uid",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0e02d218069e8635",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 360,
        "wires": [
            [
                "7f6a160b7f284e7b"
            ]
        ]
    },
    {
        "id": "7f6a160b7f284e7b",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "Drop if not right Card",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "b310d509",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 420,
        "y": 360,
        "wires": [
            [
                "4690350b0aa39e12"
            ]
        ]
    },
    {
        "id": "8357376e46484446",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "open",
        "payloadType": "str",
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "e73cd5e496e94b58"
            ]
        ]
    },
    {
        "id": "49215fb40a7192ea",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "Close",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "close",
        "payloadType": "str",
        "x": 1010,
        "y": 440,
        "wires": [
            [
                "780f54ef9fecaca2"
            ]
        ]
    },
    {
        "id": "9b84d53022030882",
        "type": "mqtt in",
        "z": "73dda681e85c7906",
        "name": "",
        "topic": "/button1",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0e02d218069e8635",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 220,
        "wires": [
            [
                "fb9b1a1aa5411300"
            ]
        ]
    },
    {
        "id": "665d5ee52e22c15e",
        "type": "mqtt in",
        "z": "73dda681e85c7906",
        "name": "Outside Temperature",
        "topic": "/outside_temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0e02d218069e8635",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 540,
        "wires": [
            [
                "6cd27bd3a4cc72da"
            ]
        ]
    },
    {
        "id": "4690350b0aa39e12",
        "type": "influxdb in",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Get Last Card State",
        "query": "from(bucket: \"iot\")\n  |> range(start: -3h)\n  |> filter(fn: (r) =>\n    r._measurement == \"lock_state\" and\n    r._field == \"value\"\n  )\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iotempire-04",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "d723e6cae4f43788"
            ]
        ]
    },
    {
        "id": "d723e6cae4f43788",
        "type": "function",
        "z": "73dda681e85c7906",
        "name": "Drop",
        "func": "\nconst time = msg.payload[0]._time;\nconst currentTime = new Date().toISOString();\n\nconst currentDateObj = new Date(currentTime);\nconst otherDateObj = new Date(time);\n\nconst differenceInSeconds = Math.abs((currentDateObj.getTime() - otherDateObj.getTime()) / 1000);\n\nif (differenceInSeconds < 5)\n    msg.status = \"to_delete\";//+differenceInSeconds.toString();\nelse\n    msg.status = differenceInSeconds.toString();\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 460,
        "wires": [
            [
                "e15289a4d7af3151"
            ]
        ]
    },
    {
        "id": "55e3747ec66635b3",
        "type": "function",
        "z": "73dda681e85c7906",
        "name": "Get Window state",
        "func": "const value = msg.payload[0][\"_value\"];\n\nif (value == 1)\n    msg.payload = 0;\nelse if (value == 0)\n    msg.payload = 1;\nelse\n    msg.payload = -1;\n    \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 460,
        "wires": [
            [
                "c5a17e8ebf12c2d8"
            ]
        ]
    },
    {
        "id": "8231321efafff9a7",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "Open",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "9158f4fce0e627bf"
            ]
        ]
    },
    {
        "id": "6fa2436271132fd6",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "Close",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "9158f4fce0e627bf"
            ]
        ]
    },
    {
        "id": "9158f4fce0e627bf",
        "type": "influxdb out",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Set Lock State",
        "measurement": "lock_state",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iotempire-04",
        "bucket": "iot",
        "x": 320,
        "y": 660,
        "wires": []
    },
    {
        "id": "c5a17e8ebf12c2d8",
        "type": "influxdb out",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Set Lock State",
        "measurement": "lock_state",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iotempire-04",
        "bucket": "iot",
        "x": 860,
        "y": 460,
        "wires": []
    },
    {
        "id": "e15289a4d7af3151",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "Drop if to_delete",
        "property": "status",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "to_delete",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 460,
        "wires": [
            [
                "55e3747ec66635b3"
            ]
        ]
    },
    {
        "id": "86d01e224773c8bb",
        "type": "influxdb in",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Get Lock State",
        "query": "from(bucket: \"iot\")\n  |> range(start: -3h)\n  |> filter(fn: (r) =>\n    r._measurement == \"lock_state\" and\n    r._field == \"value\"\n  )\n  |> last()\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iotempire-04",
        "x": 740,
        "y": 100,
        "wires": [
            [
                "4f159659232d4fc7"
            ]
        ]
    },
    {
        "id": "8e239814dbc6f2e4",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 510,
        "y": 620,
        "wires": [
            [
                "ef3d9054cd993c2a"
            ]
        ]
    },
    {
        "id": "5afc11b0a377def2",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "15",
        "payloadType": "num",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "ef3d9054cd993c2a"
            ]
        ]
    },
    {
        "id": "2d10586bd06afbe8",
        "type": "inject",
        "z": "73dda681e85c7906",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "20",
        "payloadType": "num",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "ef3d9054cd993c2a"
            ]
        ]
    },
    {
        "id": "ef3d9054cd993c2a",
        "type": "influxdb out",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Add Temperature value",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iotempire-04",
        "bucket": "iot",
        "x": 770,
        "y": 660,
        "wires": []
    },
    {
        "id": "1515fbbc8a98a9aa",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "m5stick",
        "info": "",
        "x": 110,
        "y": 120,
        "wires": []
    },
    {
        "id": "44cf2b6ae007f1bb",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "rfid sensor",
        "info": "",
        "x": 120,
        "y": 300,
        "wires": []
    },
    {
        "id": "79f858eb169531a6",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "temperature sensor",
        "info": "",
        "x": 90,
        "y": 500,
        "wires": []
    },
    {
        "id": "6cd27bd3a4cc72da",
        "type": "influxdb out",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Add Temperature value",
        "measurement": "temperature",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iotempire-04",
        "bucket": "iot",
        "x": 470,
        "y": 540,
        "wires": []
    },
    {
        "id": "899c167ecc3f7ad8",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "Influxdb",
        "info": "",
        "x": 710,
        "y": 560,
        "wires": []
    },
    {
        "id": "e28291b7d0165265",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "lock_state",
        "info": "",
        "x": 840,
        "y": 520,
        "wires": []
    },
    {
        "id": "b81bfa381ea2e52d",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "window___state",
        "info": "",
        "x": 860,
        "y": 560,
        "wires": []
    },
    {
        "id": "5ff7d2bcdf915c91",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "temperature",
        "info": "",
        "x": 850,
        "y": 600,
        "wires": []
    },
    {
        "id": "d090aac2f5e0b58a",
        "type": "influxdb in",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Get Temperature",
        "query": "from(bucket: \"iot\")\n  |> range(start: -3h)\n  |> filter(fn: (r) =>\n    r._measurement == \"temperature\" and\n    r._field == \"value\"\n  )\n  |> last()",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iotempire-04",
        "x": 730,
        "y": 20,
        "wires": [
            [
                "814bd75a3781b50c"
            ]
        ]
    },
    {
        "id": "4f159659232d4fc7",
        "type": "function",
        "z": "73dda681e85c7906",
        "name": "function 5",
        "func": "\nconst value = msg.payload[0]._value;\n\nlet state = \"locked\";\nif (value == 1)\n    state = \"unlocked\"\n\nmsg.payload = `(${state})`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 100,
        "wires": [
            [
                "e30b186b51889223"
            ]
        ]
    },
    {
        "id": "e30b186b51889223",
        "type": "delay",
        "z": "73dda681e85c7906",
        "name": "",
        "pauseType": "delay",
        "timeout": "70",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1050,
        "y": 80,
        "wires": [
            [
                "55355dd3a8747d61"
            ]
        ]
    },
    {
        "id": "9c03d38129b268e8",
        "type": "comment",
        "z": "73dda681e85c7906",
        "name": "button",
        "info": "",
        "x": 90,
        "y": 220,
        "wires": []
    },
    {
        "id": "fb9b1a1aa5411300",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "Drop if released",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "released",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 400,
        "y": 220,
        "wires": [
            [
                "fe56aafe8ff426d1"
            ]
        ]
    },
    {
        "id": "fe56aafe8ff426d1",
        "type": "influxdb in",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Get Lock State",
        "query": "from(bucket: \"iot\")\n  |> range(start: -3h)\n  |> filter(fn: (r) =>\n    r._measurement == \"lock_state\" and\n    r._field == \"value\"\n  )\n  |> last()\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iotempire-04",
        "x": 580,
        "y": 220,
        "wires": [
            [
                "227f045da9b243ad"
            ]
        ]
    },
    {
        "id": "47aaa3dcf2312e3d",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "Drop if locked",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "locked",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 300,
        "wires": [
            [
                "c9264f3940728bb7"
            ]
        ]
    },
    {
        "id": "c9264f3940728bb7",
        "type": "influxdb in",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Get Window State",
        "query": "from(bucket: \"iot\")\n  |> range(start: -3h)\n  |> filter(fn: (r) =>\n    r._measurement == \"window___state\" and\n    r._field == \"value\"\n  )\n  |> last()\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iotempire-04",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "17ce953d703b25a5"
            ]
        ]
    },
    {
        "id": "b8f97524fe9abeea",
        "type": "delay",
        "z": "73dda681e85c7906",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1050,
        "y": 40,
        "wires": [
            [
                "55355dd3a8747d61"
            ]
        ]
    },
    {
        "id": "98d908f046467008",
        "type": "influxdb in",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Get Window State",
        "query": "from(bucket: \"iot\")\n  |> range(start: -3h)\n  |> filter(fn: (r) =>\n    r._measurement == \"window___state\" and\n    r._field == \"value\"\n  )\n  |> last()\n",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "iotempire-04",
        "x": 730,
        "y": 60,
        "wires": [
            [
                "b921f4ddd5ee6984"
            ]
        ]
    },
    {
        "id": "b921f4ddd5ee6984",
        "type": "function",
        "z": "73dda681e85c7906",
        "name": "function 6",
        "func": "\nconst value = msg.payload[0]._value;\n\nlet state = \"close\";\nif (value == 1)\n    state = \"open\"\n\nmsg.payload = `\n Window is ${state}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 60,
        "wires": [
            [
                "b8f97524fe9abeea"
            ]
        ]
    },
    {
        "id": "21a0a6e7f52bb821",
        "type": "mqtt out",
        "z": "73dda681e85c7906",
        "name": "Set Window state",
        "topic": "window/window/set",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0e02d218069e8635",
        "x": 1110,
        "y": 320,
        "wires": []
    },
    {
        "id": "07e40fa004014d69",
        "type": "influxdb out",
        "z": "73dda681e85c7906",
        "influxdb": "b2527686ec8ef5ad",
        "name": "Set Window State",
        "measurement": "window___state",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "iotempire-04",
        "bucket": "iot",
        "x": 1110,
        "y": 280,
        "wires": []
    },
    {
        "id": "227f045da9b243ad",
        "type": "function",
        "z": "73dda681e85c7906",
        "name": "Switch Lock State",
        "func": "const value = msg.payload[0][\"_value\"];\n\nif (value == 0)\n    msg.payload = \"locked\";\nelse\n    msg.payload = \"unlocked\";\n    \nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "47aaa3dcf2312e3d"
            ]
        ]
    },
    {
        "id": "17ce953d703b25a5",
        "type": "switch",
        "z": "73dda681e85c7906",
        "name": "check state wi",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 300,
        "wires": [
            [
                "e73cd5e496e94b58"
            ],
            [
                "780f54ef9fecaca2"
            ]
        ]
    },
    {
        "id": "e73cd5e496e94b58",
        "type": "change",
        "z": "73dda681e85c7906",
        "name": "open",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "open",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "21a0a6e7f52bb821",
                "07e40fa004014d69"
            ]
        ]
    },
    {
        "id": "780f54ef9fecaca2",
        "type": "change",
        "z": "73dda681e85c7906",
        "name": "close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "close",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 320,
        "wires": [
            [
                "21a0a6e7f52bb821",
                "07e40fa004014d69"
            ]
        ]
    },
    {
        "id": "0e02d218069e8635",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b2527686ec8ef5ad",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "iot",
        "name": "To Influx",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    }
]